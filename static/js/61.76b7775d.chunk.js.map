{"version":3,"file":"static/js/61.76b7775d.chunk.js","mappings":"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","sources":["components/Box/Box.styled.js","redux/contacts/selectors.js","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/Loader/Loader.styled.js","components/Loader/loader.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);\n\nexport const Title = styled.h1`\n  font-family: 'Rubik One', sans-serif;\n  font-size: 40px;\n  text-transform: uppercase;\n  text-align: center;\n  background: rgb(212, 166, 252);\n  margin-bottom: 10px;\n  color: white;\n  border-radius: 5px;\n  mix-blend-mode: multiply;\n  padding: 5px 10px;\n`;\nexport const TitleCont = styled.h2`\n  margin-bottom: 10px;\n  text-align: center;\n  font-family: 'Rubik One', sans-serif;\n  font-size: 25px;\n  text-transform: uppercase;\n  background: rgb(212, 166, 252);\n  color: white;\n  border-radius: 5px;\n  mix-blend-mode: multiply;\n  padding: 5px 10px;\n`;\n","export const selectContacts = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilter = state => state.filter;\n","import React, { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts_operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { ContactsLabel, Button, Field } from './ContactsForm.styled';\n\nexport const ContactsForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const onChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const contactInfo = {\n      name: name,\n      number: number,\n    };\n    if (\n      contacts.find(\n        cont => cont.name.toLowerCase() === contactInfo.name.toLowerCase()\n      )\n    )\n      return Notiflix.Notify.warning(\n        `${contactInfo.name} is already in contacts`\n      );\n\n    dispatch(addContact(contactInfo));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <ContactsLabel>\n        <span className=\"text\">Name </span>\n        <Field\n          onChange={onChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </ContactsLabel>\n      <ContactsLabel>\n        <span className=\"text\">Number</span>\n        <Field\n          onChange={onChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </ContactsLabel>\n      <Button type=\"submit\">Add contact</Button>\n    </form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsListStyled = styled.ul`\n  padding: 0;\n  margin: 20px auto 0 auto;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 15px;\n  margin: 0;\n  margin-bottom: 8px;\n  color: #423189;\n  .icons {\n    margin-right: 10px;\n  }\n`;\nexport const ListLinkWrap = styled.div`\n  display: flex;\n  gap: 10px;\n`;\nexport const ListLink = styled.a`\n  color: #990066;\n  &:hover,\n  &:focus {\n    color: #800080;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  deleteContact,\n  fetchContacts,\n} from 'redux/contacts/contacts_operations';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { Button } from 'components/ContactsForm/ContactsForm.styled';\nimport {\n  ContactsListStyled,\n  ListItem,\n  ListLink,\n  ListLinkWrap,\n} from 'components/ContactsList/ContactsList.styled';\nimport { BsTelephoneForwardFill } from 'react-icons/bs';\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filterContacts = () => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  return (\n    <ContactsListStyled>\n      {filterContacts().map(({ name, number, id }) => (\n        <ListItem key={id}>\n          {name}\n          <ListLinkWrap>\n            <ListLink href={`tel:${number.replace(/\\D/, '')}`}>\n              <BsTelephoneForwardFill size={18} style={{ marginRight: '10' }} />\n              {number}\n            </ListLink>\n            <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </Button>\n          </ListLinkWrap>\n        </ListItem>\n      ))}\n    </ContactsListStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LoaderStyled = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { LoaderStyled } from 'components/Loader/Loader.styled';\n\nexport function Loader() {\n  return (\n    <LoaderStyled>\n      <ThreeDots\n        height=\"40\"\n        width=\"40\"\n        radius=\"9\"\n        color=\"#800080\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </LoaderStyled>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FilterForm = styled.label`\n  display: flex;\n  flex-direction: column;\n  .name {\n    display: block;\n    font-size: 18px;\n    font-weight: 600;\n    color: rgb(212, 166, 252);\n    margin-bottom: 5px;\n  }\n`;\nexport const FilterField = styled.input`\n  padding: 5px;\n  background-color: white;\n  color: #423189;\n  border: 1px solid rgb(212, 166, 252);\n  border-radius: 4px;\n  :hover,\n  :focus {\n    outline: none;\n    background-color: rgb(243, 233, 252);\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { filterContact } from 'redux/contacts/sliceFilter';\nimport { FilterForm, FilterField } from './Filter.styled';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChange = ({ target: { value } }) => {\n    dispatch(filterContact(value));\n  };\n  return (\n    <FilterForm>\n      <span className=\"name\">Find contacts by name</span>\n      <FilterField\n        onChange={onChange}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </FilterForm>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Loader } from 'components/Loader/loader';\nimport Filter from 'components/Filter/Filter';\nimport { Box, Title, TitleCont } from 'components/Box/Box.styled.js';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <Box\n      as=\"section\"\n      m=\"auto\"\n      bg=\"white\"\n      borderRadius=\"8px\"\n      width=\"450px\"\n      p=\"30px\"\n      mt=\"30px\"\n    >\n      <Box pb=\"40px\">\n        <Title>Phonebook</Title>\n        <ContactsForm />\n      </Box>\n      <Box>\n        <TitleCont>Contacts</TitleCont>\n        {isLoading && !error && <Loader />}\n        <Filter />\n        <ContactsList />\n      </Box>\n    </Box>\n  );\n};\nexport default Contacts;\n"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","Title","TitleCont","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactsForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","onChange","e","currentTarget","value","onSubmit","evt","preventDefault","contactInfo","find","cont","toLowerCase","Notiflix","addContact","className","type","pattern","title","required","ContactsListStyled","ListItem","ListLinkWrap","ListLink","ContactsList","useEffect","fetchContacts","includes","map","id","href","replace","size","style","marginRight","onClick","deleteContact","LoaderStyled","Loader","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible","FilterForm","FilterField","target","filterContact","as","m","bg","borderRadius","p","mt","pb"],"sourceRoot":""}